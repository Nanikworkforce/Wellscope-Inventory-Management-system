# Generated by Django 5.1.6 on 2025-03-12 08:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Equipment Categories',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('purchase_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('maintenance', 'Maintenance'), ('decommissioned', 'Decommissioned')], max_length=50)),
                ('condition', models.CharField(choices=[('new', 'New'), ('good', 'Good'), ('worn', 'Worn'), ('damaged', 'Damaged')], max_length=50)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.equipmentcategory')),
            ],
            options={
                'verbose_name_plural': 'Equipment',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.CharField(max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_manual_entry', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=255)),
                ('lifecycle_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], max_length=255)),
                ('tracking_info', models.CharField(choices=[('gps', 'GPS Tracking'), ('manual', 'Manual Entry'), ('rfid', 'RFID Tracking'), ('lost_signal', 'Signal Lost'), ('untracked', 'Not Tracked')], max_length=255)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('geofence_status', models.CharField(choices=[('inside', 'Inside Geofence'), ('outside', 'Outside Geofence'), ('undefined', 'No Geofence Set')], default='undefined', max_length=255)),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.equipment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='current_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_equipment', to='inventory.location'),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('project_code', models.CharField(max_length=50, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planning', 'Planning Phase'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planning', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('progress', models.IntegerField(default=0, help_text='Progress percentage')),
                ('project_manager', models.CharField(max_length=255)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_projects', to='inventory.client')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.location')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment_date', models.DateField()),
                ('release_date', models.DateField(blank=True, null=True)),
                ('hours_allocated', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('hours_used', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('notes', models.TextField(blank=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.equipment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.project')),
            ],
            options={
                'verbose_name_plural': 'Project Equipment',
                'ordering': ['-assignment_date'],
                'unique_together': {('project', 'equipment', 'assignment_date', 'release_date')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='equipment',
            field=models.ManyToManyField(related_name='projects', through='inventory.ProjectEquipment', to='inventory.equipment'),
        ),
        migrations.CreateModel(
            name='UsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_logged', models.DateField(auto_now_add=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('hours_used', models.DecimalField(decimal_places=2, max_digits=6)),
                ('usage_type', models.CharField(choices=[('operational', 'Operational Use'), ('testing', 'Testing/Calibration'), ('training', 'Training'), ('standby', 'Standby Time')], max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('project', models.CharField(blank=True, max_length=255)),
                ('maintenance_alert', models.BooleanField(default=False)),
                ('alert_reason', models.TextField(blank=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.equipment')),
            ],
            options={
                'ordering': ['-date_logged'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive Maintenance'), ('corrective', 'Corrective Maintenance'), ('condition', 'Condition-Based'), ('emergency', 'Emergency Repair')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('maintenance_date', models.DateField(auto_now_add=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('next_maintenance_due', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='scheduled', max_length=20)),
                ('description', models.TextField()),
                ('actions_taken', models.TextField(blank=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('labor_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('parts_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('performed_by', models.CharField(max_length=255)),
                ('approved_by', models.CharField(blank=True, max_length=255)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.equipment')),
            ],
            options={
                'ordering': ['-maintenance_date'],
                'indexes': [models.Index(fields=['equipment', 'status'], name='inventory_m_equipme_459f31_idx'), models.Index(fields=['maintenance_date'], name='inventory_m_mainten_6183a8_idx'), models.Index(fields=['status'], name='inventory_m_status_1a4170_idx')],
            },
        ),
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Equipment Purchase'), ('maintenance', 'Maintenance Cost'), ('repair', 'Repair Cost'), ('depreciation', 'Depreciation'), ('operating', 'Operating Cost'), ('rental', 'Rental Income'), ('project', 'Project Revenue')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('transaction_date', models.DateField()),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('depreciation_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Annual depreciation rate in percentage', max_digits=5, null=True)),
                ('depreciation_method', models.CharField(blank=True, choices=[('straight_line', 'Straight Line'), ('declining_balance', 'Declining Balance'), ('sum_years', 'Sum of Years')], max_length=20, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financial_records', to='inventory.equipment')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financial_records', to='inventory.project')),
            ],
            options={
                'ordering': ['-transaction_date'],
                'indexes': [models.Index(fields=['transaction_type', 'status'], name='inventory_f_transac_995f6a_idx'), models.Index(fields=['equipment', 'transaction_date'], name='inventory_f_equipme_1f954c_idx'), models.Index(fields=['project', 'transaction_date'], name='inventory_f_project_3d07b0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['status', 'start_date'], name='inventory_p_status_8cd3db_idx'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['project_code'], name='inventory_p_project_27549d_idx'),
        ),
        migrations.AddIndex(
            model_name='usagelog',
            index=models.Index(fields=['equipment', 'date_logged'], name='inventory_u_equipme_a0714c_idx'),
        ),
        migrations.AddIndex(
            model_name='usagelog',
            index=models.Index(fields=['maintenance_alert'], name='inventory_u_mainten_aa9952_idx'),
        ),
    ]
